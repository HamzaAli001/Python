                        #DataTypes
# Numeric DataType
# 1. int
# Integer data type
Number = 500
NegativeNumber = -400
print(type(Number))  # Output: <class 'int'>

# 2. Float
# Floating-point data type
FloatNumber = 1.45
NegitiveFloatNumber = -7.6
print(type(FloatNumber))  # Output: <class 'float'>

ExponentNumber = 1.5e5
NegativeExponentNumber = -1.2e3
print(ExponentNumber)  # Output: 150000.0
print(type(ExponentNumber))  # Output: <class 'float'>

# 3. Complex
# Complex number data type
ComplexNumber = 2 + 3j
print(type(ComplexNumber))  # Output: <class 'complex'>

# String DataType
# String data type
Name = "Ali Hamza"
print(type(Name))  # Output: <class 'str'>

# Boolean
# Boolean data type
Status = True
print(type(Status))  # Output: <class 'bool'>

# True=1 False=0
print(True + True)    # Output: 2
print(True + True * False)  # Output: 1

# Sequence Types

# 1. List
# group of elements, Can store Different DataTypes, can modify, Dynamic size,
List = [2, 2.5, 2 + 3j, "Hamza", True]
print(List[0])  # Output: 2
print(List[-1])  # Output: True

List[1] = 3.5
print(List)  # Output: [2, 3.5, (2+3j), 'Hamza', True]

List.append("Ali")  # Dynamic addition
print(List)  # Output: [2, 3.5, (2+3j), 'Hamza', True, 'Ali']

# 2. Tuple
# group of elements, Can store Different DataTypes, cannot modify (Readonly), Dynamic size,Tuple = (3, 3.5, 3 + 3j, "Ali", False)
print(Tuple[0])  # Output: 3
print(Tuple[-1])  # Output: False

# Tuple[1] = 3.5  # Uncommenting this line will result in an error

Tuple = Tuple + ("Ali",)  # Dynamic addition
print(Tuple)  # Output: (3, 3.5, (3+3j), 'Ali', False, 'Ali')

# 3. Range
# Range: Represents a sequence of numbers with a start, end, and step
Range = range(5)
print(Range[1])  # Output: 1

RangeDynamic = range(10, 20, 3)
print(RangeDynamic[1])  # Output: 13
print(len(RangeDynamic))  # Output: 4
print(list(RangeDynamic))  # Output: [10, 13, 16, 19]

# Dictionary
# Dictionary: A collection of key-value pairs
Dictionary = {
    "name": "Ali Hamza",
    "age": 24
}
print(type(Dictionary))  # Output: <class 'dict'>
print(Dictionary)  # Output: {'name': 'Ali Hamza', 'age': 24}
print(Dictionary["name"])  # Output: Ali Hamza

# Set
# It is not necessary that it shows as we made it, so can't access through index, does not accept duplicates
Set = {3, 3.5, 3 + 3j, "Ali", False, 3, 3.5, 3 + 3j}
print(Set)  # Output: {False, 3, 3.5, 'Ali', (3+3j)}
# print(Set[1])  # Uncommenting this line will result in an error

# None
# None: Represents the absence of a value or a null value
none = None
print(none)  # Output: None


'''
+---------------+-------------------------------------------+-----------------------+---------------------------------------------------+
|   Data Type   |               Description                 |        Value Range    |                   Example Code                   |
+---------------+-------------------------------------------+-----------------------+---------------------------------------------------+
| Numeric Types |                                                                                        
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
|     int       | Integer data type                         | Unlimited             | x = 5                                            |
|     float     | Floating-point data type                  | Approx. Â±1.7e308      | y = 3.14                                         |
|   complex     | Complex number data type                  | Unlimited             | z = 2 + 3j                                       |
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
| Text Type                                                 
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
|     str       | String data type                          | Unlimited             | name = "Python"                                  |
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
| Boolean Type  |                                                                                
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
|     bool      | Boolean data type                         | True/False            | is_valid = True                                  |
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
| Sequence Types|                                                                                        
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
|     list      | Ordered collection with varied types      | Unlimited             | numbers = [1, 2, 3, 4]                           |
|     tuple     | Ordered collection (immutable)            | Unlimited             | coordinates = (10, 20)                           |
|    range      | Represents a sequence of numbers          | Unlimited             | num_range = range(1, 6)                          |
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
| Mapping Type  |                                                                                   
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
|     dict      | Key-value pairs data type                 | Unlimited             | person = {"name": "Alice", "age": 30}            |
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
| Set Types     |                                                                                    
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
|     set       | Unordered collection of unique elements   | Unlimited             | unique_numbers = {1, 2, 3, 4}                    |
| frozenset     | Immutable version of a set                | Unlimited             | immutable_set = frozenset([10, 20, 30])          |
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
| Binary Types  |                                                                                    
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
|    bytes      | Immutable sequence of bytes               | Unlimited             | binary_data = bytes([65, 66, 67])                |
| bytearray     | Mutable sequence of bytes                 | Unlimited             | mutable_bytes = bytearray([70, 71, 72])          |
| memoryview    | Access to internal data of an object      | Unlimited             | view = memoryview(bytearray([1, 2, 3]))          |
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
| None Type     |                                                                        
|---------------|-------------------------------------------|-----------------------|-----------------------------------------------   |
|     None      | Represents absence of value or null value | N/A                   | result = None                                    |
+---------------+-------------------------------------------+-----------------------+--------------------------------------------------+


'''


